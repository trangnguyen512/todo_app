{"ast":null,"code":"import { createSelector } from \"reselect\";\nexport const searchTextSelector = state => state.filters.search;\nexport const filterStatusSelector = state => state.filters.status;\nexport const filterPrioritiesSelector = state => state.filters.priority;\nexport const todoListSelector = state => state.todoList;\n// reselect\nexport const todosRemaining = createSelector(todoListSelector, filterStatusSelector, searchTextSelector, filterPrioritiesSelector, (todoList, status, searchText, priorities) => {\n  if (!Array.isArray(priorities)) {\n    priorities = []; // Khởi tạo priorities là một mảng rỗng nếu không phải là mảng\n  }\n\n  return todoList.filter(todo => {\n    if (status === \"All\") {\n      return priorities.length ? todo.name.includes(searchText) && priorities.includes(todo.priority) : todo.name.includes(searchText);\n    }\n    return todo.name.includes(searchText) && (status !== \"All\" && status === \"Completed\" ? todo.completed : !todo.completed) && (priorities.length ? priorities.includes(todo.priority) : true);\n  });\n});","map":{"version":3,"names":["createSelector","searchTextSelector","state","filters","search","filterStatusSelector","status","filterPrioritiesSelector","priority","todoListSelector","todoList","todosRemaining","searchText","priorities","Array","isArray","filter","todo","length","name","includes","completed"],"sources":["/Users/trangnguyen/Documents/hook/src/redux/selector.js"],"sourcesContent":["import { createSelector } from \"reselect\";\n\nexport const searchTextSelector = (state) => state.filters.search;\nexport const filterStatusSelector = (state) => state.filters.status;\nexport const filterPrioritiesSelector = (state) => state.filters.priority;\nexport const todoListSelector = (state) => state.todoList;\n// reselect\nexport const todosRemaining = createSelector(\n  todoListSelector,\n  filterStatusSelector,\n  searchTextSelector,\n  filterPrioritiesSelector,\n  (todoList, status, searchText, priorities) => {\n    if (!Array.isArray(priorities)) {\n      priorities = []; // Khởi tạo priorities là một mảng rỗng nếu không phải là mảng\n    }\n    return todoList.filter((todo) => {\n      if (status === \"All\") {\n        return priorities.length\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\n          : todo.name.includes(searchText);\n      }\n      return (\n        todo.name.includes(searchText) &&\n        (status !== \"All\" && status === \"Completed\"\n          ? todo.completed\n          : !todo.completed) &&\n        (priorities.length ? priorities.includes(todo.priority) : true)\n      );\n    });\n  }\n);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,UAAU;AAEzC,OAAO,MAAMC,kBAAkB,GAAIC,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,MAAM;AACjE,OAAO,MAAMC,oBAAoB,GAAIH,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACG,MAAM;AACnE,OAAO,MAAMC,wBAAwB,GAAIL,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACK,QAAQ;AACzE,OAAO,MAAMC,gBAAgB,GAAIP,KAAK,IAAKA,KAAK,CAACQ,QAAQ;AACzD;AACA,OAAO,MAAMC,cAAc,GAAGX,cAAc,CAC1CS,gBAAgB,EAChBJ,oBAAoB,EACpBJ,kBAAkB,EAClBM,wBAAwB,EACxB,CAACG,QAAQ,EAAEJ,MAAM,EAAEM,UAAU,EAAEC,UAAU,KAAK;EAC5C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,EAAE;IAC9BA,UAAU,GAAG,EAAE,CAAC,CAAC;EACnB;;EACA,OAAOH,QAAQ,CAACM,MAAM,CAAEC,IAAI,IAAK;IAC/B,IAAIX,MAAM,KAAK,KAAK,EAAE;MACpB,OAAOO,UAAU,CAACK,MAAM,GACpBD,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACR,UAAU,CAAC,IAAIC,UAAU,CAACO,QAAQ,CAACH,IAAI,CAACT,QAAQ,CAAC,GACpES,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACR,UAAU,CAAC;IACpC;IACA,OACEK,IAAI,CAACE,IAAI,CAACC,QAAQ,CAACR,UAAU,CAAC,KAC7BN,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,WAAW,GACvCW,IAAI,CAACI,SAAS,GACd,CAACJ,IAAI,CAACI,SAAS,CAAC,KACnBR,UAAU,CAACK,MAAM,GAAGL,UAAU,CAACO,QAAQ,CAACH,IAAI,CAACT,QAAQ,CAAC,GAAG,IAAI,CAAC;EAEnE,CAAC,CAAC;AACJ,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}